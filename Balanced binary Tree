# Definition for a binary tree node.
 # a  tree is said to be balanced if height of left -height of right 0=>1<=
class TreeNode:
     def __init__(self, val=0, left=None, right=None):
         self.val = val
         self.left = left
         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        def height(root):
            if root is None:
                return 0
            height_left=height(root.left)
            height_right=height(root.right)
            if height_left <0 or  height_right <0  or  abs(height_left-height_right)>1:
               return -1
            return max(height_left,height_right)+1
        return height(root)!=-1
